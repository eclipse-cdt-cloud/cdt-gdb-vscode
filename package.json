{
  "name": "cdt-gdb-vscode",
  "version": "0.0.90",
  "description": "VS Code extension for CDT GDB debug adapter",
  "publisher": "eclipse-cdt",
  "repository": {
    "type": "git",
    "url": "https://github.com/eclipse-cdt/cdt-gdb-vscode.git"
  },
  "author": "Eclipse CDT",
  "license": "EPL-2.0",
  "icon": "images/cdt_debug_logo.png",
  "bugs": {
    "url": "https://github.com/eclipse-cdt/cdt-gdb-vscode/issues"
  },
  "homepage": "https://github.com/eclipse-cdt/cdt-gdb-vscode#readme",
  "main": "./out/extension",
  "engines": {
    "vscode": "^1.26.0"
  },
  "activationEvents": [
    "onDebug",
    "onCommand:cdt.gdb.memory.open"
  ],
  "contributes": {
    "commands": [
      {
        "category": "GDB",
        "title": "Open Memory Browser",
        "command": "cdt.gdb.memory.open"
      }
    ],
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      }
    ],
    "debuggers": [
      {
        "type": "gdb",
        "label": "GDB",
        "program": "./node_modules/cdt-gdb-adapter/dist/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "gdb"
              },
              "program": {
                "type": "string",
                "description": "Path to the program to be launched",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "arguments": {
                "type": "string",
                "description": "Arguments for the program"
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              },
              "logFile": {
                "type": "string",
                "description": "Absolute path to the file to log interaction with gdb"
              },
              "openGdbConsole": {
                "type": "boolean",
                "description": "(UNIX-only) Open a GDB console in your IDE while debugging"
              }
            }
          },
          "attach": {
            "required": [
              "program",
              "processId"
            ],
            "properties": {
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "gdb"
              },
              "program": {
                "type": "string",
                "description": "Path to the program to be debugged",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "processId": {
                "type": "string",
                "description": "Process ID to attach to",
                "default": "${command:askProcessId}"
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              },
              "logFile": {
                "type": "string",
                "description": "Absolute path to the file to log interaction with gdb"
              },
              "openGdbConsole": {
                "type": "boolean",
                "description": "(UNIX-only) Open a GDB console in your IDE while debugging"
              }
            }
          }
        },
        "variables": {
          "askProgramPath": "cdt.debug.askProgramPath",
          "askProcessId": "cdt.debug.askProcessId"
        },
        "initialConfigurations": [
          {
            "type": "gdb",
            "request": "launch",
            "name": "gdb launch",
            "program": "${workspaceFolder}/${command:askProgramPath}"
          }
        ],
        "configurationSnippets": [
          {
            "label": "GDB CDT Local debugging",
            "description": "A new configuration for local debugging using GDB.",
            "body": {
              "type": "gdb",
              "request": "launch",
              "name": "Name here",
              "program": "^\"\\${workspaceFolder}/\\${command:askProgramPath}\""
            }
          }
        ]
      },
      {
        "type": "gdbtarget",
        "label": "GDB Target",
        "program": "./node_modules/cdt-gdb-adapter/dist/debugTargetAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "gdb"
              },
              "program": {
                "type": "string",
                "description": "Path to the program to be launched",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              },
              "logFile": {
                "type": "string",
                "description": "Absolute path to the file to log interaction with gdb"
              },
              "openGdbConsole": {
                "type": "boolean",
                "description": "(UNIX-only) Open a GDB console in your IDE while debugging"
              },
              "target": {
                "type": "object",
                "default": {},
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The kind of target debugging to do. This is passed to -target-select (defaults to remote)",
                    "default": "remote"
                  },
                  "parameters": {
                    "type": "array",
                    "description": "Target parameters for the type of target. Normally something like localhost:12345. (defaults to `${host}:${port}`)",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "host": {
                    "type": "string",
                    "description": "Target host to connect to (defaults to 'localhost', ignored if parameters is set)",
                    "default": "localhost"
                  },
                  "port": {
                    "type": "string",
                    "description": "Target port to connect to (defaults to value captured by serverPortRegExp, ignored if parameters is set)",
                    "default": "gdbserver"
                  },
                  "server": {
                    "type": "string",
                    "description": "The executable for the target server to launch (e.g. gdbserver or JLinkGDBServerCLExe) (defaults to gdbserver)",
                    "default": "gdbserver"
                  },
                  "serverParameters": {
                    "type": "array",
                    "description": "Command line arguments passed to server (defaults to --once :0 ${args.program}).",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "serverPortRegExp": {
                    "type": "string",
                    "description": "Regular expression to extract port from by examinging stdout/err of server. Once server is launched, port will be set to this if port is not set. Defaults to matching a string like 'Listening on port 41551' which is what gdbserver provides. Ignored if port or parameters is set",
                    "default": ""
                  },
                  "serverStartupDelay": {
                    "type": "number",
                    "description": "Delay after startup before continuing launch, in milliseconds. If serverPortRegExp is provided, it is the delay after that regexp is seen.",
                    "default": "0"
                  }
                }
              }
            }
          },
          "attach": {
            "required": [
              "program"
            ],
            "properties": {
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "gdb"
              },
              "program": {
                "type": "string",
                "description": "Path to the program to be debugged",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              },
              "logFile": {
                "type": "string",
                "description": "Absolute path to the file to log interaction with gdb"
              },
              "openGdbConsole": {
                "type": "boolean",
                "description": "(UNIX-only) Open a GDB console in your IDE while debugging"
              },
              "target": {
                "type": "object",
                "default": {},
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The kind of target debugging to do. This is passed to -target-select (defaults to remote)",
                    "default": "remote"
                  },
                  "parameters": {
                    "type": "array",
                    "description": "Target parameters for the type of target. Normally something like localhost:12345. (defaults to `${host}:${port}`)",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "host": {
                    "type": "string",
                    "description": "Target host to connect to (defaults to 'localhost', ignored if parameters is set)",
                    "default": "localhost"
                  },
                  "port": {
                    "type": "string",
                    "description": "Target port to connect to (defaults to value captured by serverPortRegExp, ignored if parameters is set)",
                    "default": "gdbserver"
                  }
                }
              }
            }
          }
        },
        "variables": {
          "askProgramPath": "cdt.debug.askProgramPath"
        },
        "initialConfigurations": [
          {
            "type": "gdbtarget",
            "request": "attach",
            "name": "gdb remote attach",
            "program": "${workspaceFolder}/${command:askProgramPath}"
          }
        ],
        "configurationSnippets": [
          {
            "label": "GDB CDT Remote debugging - automatic launching of gdbserver",
            "description": "A new configuration for remote debugging using GDB with launching of gdbserver.",
            "body": {
              "type": "gdbtarget",
              "request": "launch",
              "name": "Name here",
              "program": "^\"\\${workspaceFolder}/\\${command:askProgramPath}\""
            }
          },
          {
            "label": "GDB CDT Remote debugging",
            "description": "A new configuration for remote debugging using GDB.",
            "body": {
              "type": "gdbtarget",
              "request": "attach",
              "name": "Name here",
              "program": "^\"\\${workspaceFolder}/\\${command:askProgramPath}\""
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "build:tsc": "tsc",
    "watch:tsc": "tsc -w",
    "build:webpack": "webpack --mode production",
    "watch:webpack": "webpack --watch",
    "build": "run-s build:*",
    "watch": "run-p watch:*",
    "test": "echo \"Error: no test specified\" && exit 1",
    "postinstall": "node -e \"require('vscode/bin/install')\"",
    "vscode:prepublish": "npm run build",
    "vsce:package": "vsce package"
  },
  "dependencies": {
    "cdt-gdb-adapter": "^0.0.15-next.20200405120928.3276846.0",
    "react": "^16.13.1",
    "react-dom": "^16.13.1"
  },
  "devDependencies": {
    "@types/chai": "^4.2.11",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.9.5",
    "@types/react": "^16.9.26",
    "@types/react-dom": "^16.9.5",
    "chai": "^4.2.0",
    "css-loader": "^3.4.2",
    "event-stream": "^4.0.1",
    "node-sass": "^4.13.1",
    "npm-run-all": "^4.1.5",
    "sass-loader": "^8.0.2",
    "style-loader": "^1.1.3",
    "ts-loader": "^6.2.2",
    "tslint": "^6.1.0",
    "typescript": "^3.8.3",
    "vsce": "^1.74.0",
    "vscode": "^1.1.36",
    "webpack": "^4.42.1",
    "webpack-cli": "^3.3.11"
  },
  "bundledDependencies": [
    "cdt-gdb-adapter"
  ],
  "files": [
    "NOTICE",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md"
  ]
}
